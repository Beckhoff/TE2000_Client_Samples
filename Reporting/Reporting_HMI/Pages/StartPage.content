<div id="StartPage_1" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%">

<div id="TcHmiButton_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="px" data-tchmi-text="Create" data-tchmi-top="20" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%ctx%owner::Id|EventRegistrationMode=Resolve%/ctx%.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiPdfViewer_1::File%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Path",
          "value": null
        },
        "asyncWait": true
      },
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "TcHmi.Symbol.writeEx('%s%TcHmiReporting.OrderReport%/s%', 'TestReport', function (data) {",
          "    if (data.error === TcHmi.Errors.NONE) {",
          "        let requestGuid = data.value.currentGuid;",
          "        let reportsInProgress = data.value.inProgress;",
          "    } else {",
          "        // Handle error... ",
          "    }",
          "});"
        ],
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiPdfViewer_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiPdfViewer" data-tchmi-height-unit="px" data-tchmi-left="140" data-tchmi-left-unit="px" data-tchmi-top="20" data-tchmi-top-unit="px" data-tchmi-width-unit="px" data-tchmi-right-unit="px" data-tchmi-right="20" data-tchmi-bottom-unit="px" data-tchmi-bottom="20" data-tchmi-file="../TcHmiReporting/reports/TestReport.pdf">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "%s%TcHmiReporting.Diagnostics::reportsInProgress%/s%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%ctx%args[0]%/ctx%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": {}
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctx%owner::File%/ctx%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Path",
                  "value": "../TcHmiReporting/reports/TestReport.pdf"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": []
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>